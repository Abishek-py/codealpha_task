from scapy.all import sniff, IP, TCP, UDP, ICMP
import datetime

def packet_callback(packet):
    timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    print(f"\n[Time] {timestamp}")

    if IP in packet:
        ip_src = packet[IP].src
        ip_dst = packet[IP].dst
        proto = packet[IP].proto

        print(f"[IP] {ip_src} -> {ip_dst}")
        
        if packet.haslayer(TCP):
            sport = packet[TCP].sport
            dport = packet[TCP].dport
            print(f"[TCP] {sport} -> {dport}")

        elif packet.haslayer(UDP):
            sport = packet[UDP].sport
            dport = packet[UDP].dport
            print(f"[UDP] {sport} -> {dport}")

        elif packet.haslayer(ICMP):
            print("[ICMP] Packet")

        payload = bytes(packet[IP].payload)
        if payload:
            print(f"[Payload] {payload[:50]}")  # Show first 50 bytes

    else:
        print("[Non-IP Packet]")

# Sniff packets on your primary interface
print("Starting packet capture... Press CTRL+C to stop.")
sniff(prn=packet_callback, store=0)
